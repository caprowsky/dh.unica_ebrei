version: "2"

# Fai il boostrap del progetto così:
# 1. modifica le impostazioni di connessione al db su setting.php
# MYSQL_ROOT_PASSWORD: password
# MYSQL_DATABASE: drupal
# MYSQL_USER: drupal
# MYSQL_PASSWORD: drupal
# 2. Crea la dir /mariadb-init e inseiri lì il dump del db .sql
# 3. avvia il docker compose 
# $ docker-compose up (verifica dai log che stia caricando il db)
# 4. resetta la pw di admin 
# $ drush upwd --password="admin" "admin"
# 5. Pulisci la cache
# $ drush cc all
# 6. Imposta directory di scrittura file temporanei
# $ chmod a+w sites/default/files/


services:
  mariadb:
    image: wodby/mariadb:10.1-2.0.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
#    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci # The simple way to override the mariadb config.
    volumes:
      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
#      - /path/to/mariadb/data/on/host:/var/lib/mysql # I want to manage volumes manually.

  php:
#    image: wodby/drupal-php:7.0-2.0.0
#    image: wodby/drupal-php:7.1-2.0.0
    image: wodby/drupal-php:5.6-2.0.0
#    image: wodby/drupal-php:5.3-2.0.0
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      # PHP_XDEBUG: 1
      # PHP_XDEBUG_DEFAULT_ENABLE: 1
      # PHP_XDEBUG_REMOTE_CONNECT_BACK: 0         # This is needed to respect remote.host setting bellow
      # PHP_XDEBUG_REMOTE_HOST: "10.254.254.254"  # You will also need to 'sudo ifconfig lo0 alias 10.254.254.254'
    volumes:
      - ./:/var/www/html

  nginx:
#    image: wodby/drupal-nginx:8-1.10-2.0.0
    image: wodby/drupal-nginx:7-1.10-2.0.0
#    image: wodby/drupal-nginx:6-1.10-2.0.0
    environment:
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/
    volumes:
      - ./:/var/www/html
    ports:
      - "2222:80" 


#  varnish:
#    image: wodby/drupal-varnish:4.1-2.0.0
#    depends_on:
#      - nginx
#    environment:
#      VARNISH_SECRET: secret
#      VARNISH_BACKEND_HOST: nginx
#      VARNISH_BACKEND_PORT: 80
#    labels:
#      - 'traefik.backend=varnish'
#      - 'traefik.port=6081'
#      - 'traefik.frontend.rule=Host:varnish.drupal.docker.localhost'

#  redis:
#    image: wodby/redis:3.2-2.0.1

  pma:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mariadb
      PMA_USER: drupal
      PMA_PASSWORD: drupal
      PHP_UPLOAD_MAX_FILESIZE: 5G
      PHP_MAX_INPUT_VARS: 5G
    ports:
      - "2277:80"


#  solr:
#    image: wodby/drupal-solr:8-6.4-2.0.0
#    image: wodby/drupal-solr:8-6.3-2.0.0
#   image: wodby/drupal-solr:7-5.5-2.0.0
#    environment:
#      SOLR_HEAP: 1024m
#    labels:
#      - 'traefik.backend=solr'
#      - 'traefik.port=8983'
#      - 'traefik.frontend.rule=Host:solr.si7.docker.localhost'

#  mailhog:
#    image: mailhog/mailhog
#    labels:
#      - 'traefik.backend=mailhog'
#      - 'traefik.port=8025'
#      - 'traefik.frontend.rule=Host:mailhog.si7.docker.localhost'

#  node:
#    image: node:7-alpine
#    working_dir: /app
#    labels:
#      - 'traefik.backend=node'
#      - 'traefik.port=3000'
#      - 'traefik.frontend.rule=Host:front.drupal.docker.localhost'
#    expose:
#      - "3000"
#    volumes:
#      - ./path/to/your/single-page-app:/app
#    command: sh -c 'npm install && npm run start'

#  memcached:
#    image: memcached:1.4-alpine

#  traefik:
#    image: traefik
#    restart: unless-stopped
#    command: -c /dev/null --web --docker --logLevel=DEBUG
#    ports:
#      - '8000:80'
#      - '8080:8080'
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

#  traefik:
#    image: traefik
#    restart: unless-stopped
#    command: -c /dev/null --web --docker --logLevel=DEBUG
#    networks:
#      - si7
#      - si8
#    ports:
#      - '80:80'
#      - '8080:8080'
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#
#networks:
#  project1:
#    external: 
#      name: si7-dir_default
#  project2:
#    external:
#      name: si8-dir_default



# Docker-sync for macOS users
#volumes:
#  d4d-unison-sync:
#    external: true

